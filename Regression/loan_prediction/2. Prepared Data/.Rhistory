loan_train-[Loan_Status]
loan_train[Loan_Status]
loan_train[, 1:12]
merge <- merge(loan_test, loan_train[, 1:12], by = intersect(names(loan_test), names(loan_train)))
loan_all <- rbind(loan_test, loan_train[, names(df1)])
loan_all <- rbind(loan_test, loan_train[, names(loan_test)])
loan_all <- rbind(loan_test, loan_train)
loan_all$loan_test
loan_all <- rbind.fill(loan_test, loan_train)
loan_all <- plyr::rbind.fill(loan_test, loan_train)
View(loan_all)
summary(loan_all)
glimpse(loan_all)
loan_all$CoapplicantIncome <- int(loan_all$CoapplicantIncome)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
glimpse(loan_all)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
summary(loan_all)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- as.integer(loan_all$Loan_Amount_Term)
loan_all$Credit_History <- as.integer(loan_all$Credit_History)
loan_all$Loan_Status <- as.factor(loan_all$Loan_Status)
glimpse(loan_all)
loan_all %>%
filter(Loan_Status == NA)
loan_all %>%
filter(Loan_Status == 'NA')
loan_all
filter(loan_all$Loan_Status == 'NA')
filter(loan_all$Loan_Status == NA)
filter(loan_all$Loan_Status == 1)
dplyr::filter(loan_all$Loan_Status == 1)
loan_all$Loan_Status <- as.character(loan_all$Loan_Status)
glimpse(loan_all)
loan_all %>%
filter(Loan_Status == 'NA')
loan_all %>%
filter(Loan_Status == '1')
loan_all %>%
filter(Loan_Status == NA)
loan_all %>%
filter(Loan_Status == 1)
loan_all
loan_all$Loan_Status <- as.integer(loan_all$Loan_Status)
loan_all %>%
filter(Loan_Status == NA)
loan_all %>%
filter(Loan_Status == 1)
filter(loan_all$Loan_Status == 1)
loan_all %>%
filter(loan_all$Loan_Status == TRUE)
glimpse(loan_all)
loan_all[1:614, ]
loan_all[615: , ]
loan_all[615:,  ]
loan_all[615:981,  ]
981-615
loan_all[:614, ]
loan_all[0:614, ]
538 + 76
loan_all[615:982,  ]
982 - 615
loan_train <- loan_all[0:614, ]
loan_test <- loan_all[615:982,  ]
summary(loan_test)
summary(loan_train)
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
glimpse(loan_train)
glimpse(loan_test)
summary(loan_train)
summary(loan_test)
loan_all <- plyr::rbind.fill(loan_test, loan_train)
glimpse(loan_all)
summary(loan_all)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- as.integer(loan_all$Loan_Amount_Term)
loan_all$Credit_History <- as.integer(loan_all$Credit_History)
loan_all %>%
filter(Loan_Status == NA)
glimpse(loan_all)
summary(loan_all)
loan_all$LoanAmount <- ifelse(is.na(loan_all$LoanAmount),
ave(loan_all$LoanAmount, FUN = function(x) mean(x, na.rm = TRUE)),
loan_all$LoanAmount)
summary(loan_train$LoanAmount)
summary(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- ifelse(is.na(loan_all$Loan_Amount_Term),
ave(loan_all$Loan_Amount_Term, FUN = function(x) median(x, na.rm = TRUE)),
loan_all$Loan_Amount_Term)
summary(loan_train$Loan_Amount_Term)
loan_all$Loan_Amount_Term <- ifelse(is.na(loan_all$Loan_Amount_Term),
ave(loan_all$Loan_Amount_Term, FUN = function(x) median(x, na.rm = TRUE)),
loan_all$Loan_Amount_Term)
summary(loan_all$Loan_Amount_Term)
summary(loan_all$Credit_History)
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome > 0, 0,
loan_all$Credit_History)
summary(loan_all$Credit_History)
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome == 0, 1,
loan_all$Credit_History)
summary(loan_all$Credit_History)
summary(loan_train)
summary(loan_all)
loan_train <- loan_all[0:614, ]
loan_test <- loan_all[615:982, 1:12]
loan_test <- loan_all[615:981, 1:12]
glimpse(loan_train)
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
glimpse(loan_train)
glimpse(loan_test)
summary(loan_train)
summary(loan_test)
loan_all <- plyr::rbind.fill(loan_test, loan_train[, 1:12])
glimpse(loan_all)
View(loan_test)
loan_all <- plyr::rbind.fill(loan_train[, 1:12], loan_test)
loan_all <- plyr::rbind.fill(loan_train, loan_test)
View(loan_all)
glimpse(loan_all)
summary(loan_all)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- as.integer(loan_all$Loan_Amount_Term)
loan_all$Credit_History <- as.integer(loan_all$Credit_History)
glimpse(loan_all)
summary(loan_all)
loan_all$LoanAmount <- ifelse(is.na(loan_all$LoanAmount),
ave(loan_all$LoanAmount, FUN = function(x) mean(x, na.rm = TRUE)),
loan_all$LoanAmount)
summary(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- ifelse(is.na(loan_all$Loan_Amount_Term),
ave(loan_all$Loan_Amount_Term, FUN = function(x) median(x, na.rm = TRUE)),
loan_all$Loan_Amount_Term)
summary(loan_all$Loan_Amount_Term)
# I am making an assumption that if an applicant needs a Co-Signer then they have no credit history
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome > 0, 0,
loan_all$Credit_History)
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome == 0, 1,
loan_all$Credit_History)
summary(loan_all$Credit_History)
# Check the dataset for NA's
summary(loan_all)
loan_all %>%
filter(Loan_Status == 'Y')
loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_all %>%
filter(Loan_Status == NA)
loan_all %>%
filter(Loan_Status == 'NA')
loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N') %>%
count()
loan_train <- loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N') %>%
count()
loan_train <- loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_all %>%
filter(Loan_Status != 'Y' & Loan_Status != 'N')
loan_all %>%
setdiff(loan_all, loan_train )
loan_all %>%
setdiff(loan_train)
loan_all %>%
setdiff(loan_train) %>%
count()
loan_train <- loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_test <- loan_all %>%
setdiff(loan_train) %>%
count()
loan_train <- loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_test <- loan_all %>%
setdiff(loan_train)
glimpse(loan_train)
loan_all %>%
setdiff(loan_train) %>%
select(1:12)
loan_test <- loan_all %>%
setdiff(loan_train) %>%
select(1:12)
glimpse(loan_train)
glimpse(loan_test)
summary(loan_train)
summary(loan_test)
loan_all$Dependents
loan_all %>%
distinct(Property_Area)
loan_all %>%
distinct(Education)
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
glimpse(loan_train)
glimpse(loan_test)
summary(loan_train)
summary(loan_test)
View(loan_test)
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
glimpse(loan_train)
glimpse(loan_test)
# Make sure the data types are the same in both sets
loan_all <- plyr::rbind.fill(loan_train, loan_test)
glimpse(loan_all)
summary(loan_all)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- as.integer(loan_all$Loan_Amount_Term)
loan_all$Credit_History <- as.character(loan_all$Credit_History)
glimpse(loan_all)
summary(loan_all)
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
glimpse(loan_train)
glimpse(loan_test)
sapply(loan_all, function(x) sum(is.na(loan_all)))
loan_all %>%
distinct(Gender)
loan_all %>%
distinct(Loan_ID)
sapply(loan_all, sum(is.na(loan_all)))
sapply(loan_all, function(x) sum(is.na(loan_all)))
loan_all %>%
is.na(Loan_ID) %>%
count()
is.na(loan_all$Loan_ID)
sum(is.na(loan_all$Loan_ID))
sapply(loan_train, function(x) sum(is.na(loan_train)))
sapply(loan_train, 'function(x)' sum(is.na(loan_train)))
sapply(loan_train, sum, sum(is.na(loan_train)))
sapply(loan_train, sum sum(is.na(loan_train)))
lapply(loan_train, function(x) sum(is.na(loan_train)))
sapply(loan_train, function(x) sum(is.na(loan_train)))
loan_all %>%
distinct(Married)
sum(is.na(loan_all$Loan_ID)) %>%
count()
count(is.na(loan_all$Loan_ID))
sum(is.na(loan_all$Loan_ID))
sapply(colnames(loan_train), function(x) sum(is.na(loan_train)))
for cols in loan_train[1:ncols]:
sapply(cols, function(x) sum(is.na(cols)))
loan_all %>%
distinct(Education)
loan_all %>%
distinct(Married)
sum(is.na(loan_all$Married))
loan_all %>%
filter(Married == 'Yes) %>%
count()
loan_all %>%
filter(Married == 'Yes') %>%
count()
loan_all %>%
filter(Married == 'Yes')
loan_all %>%
group_by(Married) %>%
count()
loan_all$Married <- ifelse(is.na(loan_all$Married),
'Yes',
loan_all$Married)
loan_all %>%
group_by(Married) %>%
count()
loan_all %>%
group_by(Gender) %>%
count()
loan_all$Gender <- ifelse(is.na(loan_all$Gender),
'Female',
loan_all$Gender)
loan_all %>%
group_by(Dependents) %>%
count()
loan_all$Dependents <- ifelse(is.na(loan_all$Dependents),
'0',
loan_all$Dependents)
loan_all %>%
group_by(Dependents) %>%
count()
loan_all %>%
group_by(Education) %>%
count()
loan_all %>%
group_by(Self_Employed) %>%
count()
loan_all$Self_Employed <- ifelse(is.na(loan_all$Self_Employed),
'No',
loan_all$Self_Employed)
loan_all %>%
group_by(ApplicantIncome) %>%
count()
sum(is.na(ApplicantIncome))
sum(is.na(loan_all$ApplicantIncome))
summary(loan_all)
loan_all$LoanAmount <- ifelse(is.na(loan_all$LoanAmount),
ave(loan_all$LoanAmount, FUN = function(x) mean(x, na.rm = TRUE)),
loan_all$LoanAmount)
# Using median term
loan_all$Loan_Amount_Term <- ifelse(is.na(loan_all$Loan_Amount_Term),
ave(loan_all$Loan_Amount_Term, FUN = function(x) median(x, na.rm = TRUE)),
loan_all$Loan_Amount_Term)
summary(loan_all)
loan_all %>%
group_by(Credit_History) %>%
count()
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome > 0, 0,
loan_all$Credit_History)
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome == 0, 1,
loan_all$Credit_History)
summary(loan_all)
loan_all %>%
group_by(Credit_History) %>%
count()
loan_all %>%
group_by(Property_Area) %>%
count()
loan_all %>%
group_by(Loan_Status) %>%
count()
loan_train %>%
group_by(Loan_Status) %>%
count()
sum(is.na(loan_train))
sum(is.na(loan_all))
# Read in the datasets
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
# Take a look at the data with glimpse()
glimpse(loan_train)
glimpse(loan_test)
summary(loan_train)
summary(loan_test)
# Make sure the data types are the same in both sets
loan_all <- plyr::rbind.fill(loan_train, loan_test)
glimpse(loan_all)
summary(loan_all)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- as.integer(loan_all$Loan_Amount_Term)
loan_all$Credit_History <- as.character(loan_all$Credit_History)
# Check the outcome
glimpse(loan_all)
# Take care of missing data
summary(loan_all)
# Used these to check for missing values
# loan_train %>%
#    group_by(Loan_Status) %>%
#    count()
# sum(is.na(loan_all$ApplicantIncome))
# Making NA's Female.  There is already an imbalance in Male:Female ratio.  Adding more males may skew even further.  The ratio seems to be mostly unaffected with the addition of females
loan_all$Gender <- ifelse(is.na(loan_all$Gender),
'Female',
loan_all$Gender)
# Make NA's Yes.  Following the mode as an indicator here.
loan_all$Married <- ifelse(is.na(loan_all$Married),
'Yes',
loan_all$Married)
# Again using Mode
loan_all$Dependents <- ifelse(is.na(loan_all$Dependents),
'0',
loan_all$Dependents)
# Using Mode for Self_Employed
loan_all$Self_Employed <- ifelse(is.na(loan_all$Self_Employed),
'No',
loan_all$Self_Employed)
# Using the mean loan amount
loan_all$LoanAmount <- ifelse(is.na(loan_all$LoanAmount),
ave(loan_all$LoanAmount, FUN = function(x) mean(x, na.rm = TRUE)),
loan_all$LoanAmount)
# Using median term
loan_all$Loan_Amount_Term <- ifelse(is.na(loan_all$Loan_Amount_Term),
ave(loan_all$Loan_Amount_Term, FUN = function(x) median(x, na.rm = TRUE)),
loan_all$Loan_Amount_Term)
# I am making an assumption that if an applicant needs a Co-Signer then they have no credit history
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome > 0, 0,
loan_all$Credit_History)
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome == 0, 1,
loan_all$Credit_History)
sum(is.na(loan_all))
loan_train <- loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_test <- loan_all %>%
setdiff(loan_train) %>%
select(1:12)
sum(is.na(loan_train))
sum(is.na(loan_test))
# Create the dummy variable for categorical data
loan_all$Gender <- factor(loan_all$Gender,
levels = c('Male', 'Female'),
labels = c(1, 2))
loan_all$Married <- factor(loan_all$Married,
levels = c('Yes', 'No'),
labels = c(1, 2))
loan_all$Dependents <- factor(loan_all$Dependents,
levels = c('0', '1', '2', '3+'),
labels = c(1, 2, 3, 4))
loan_all$Education <- factor(loan_all$Education,
levels = c('Graduate', 'Not Graduate'),
labels = c(1, 2))
loan_all$Self_Employed <- factor(loan_all$Self_Employed,
levels = c('Yes', 'No'),
labels = c(1, 2))
loan_all$Credit_History <- factor(loan_all$Credit_History,
levels = c('0', '1'),
labels = c(1, 2))
loan_all$Property_Area <- factor(loan_all$Property_Area,
levels = c('Rural', 'Urban', 'Semiurban),
labels = c(1, 2, 3))
# Re-Seperate in train and test
loan_train <- loan_all %>%
filter(Loan_Status == 'Y' | Loan_Status == 'N')
loan_test <- loan_all %>%
setdiff(loan_train) %>%
select(1:12)
View(loan_train)
# Read in the datasets
loan_train <- read_csv('train.csv')
loan_test <- read_csv('test.csv')
# Take a look at the data with glimpse()
glimpse(loan_train)
glimpse(loan_test)
summary(loan_train)
summary(loan_test)
# Make sure the data types are the same in both sets
loan_all <- plyr::rbind.fill(loan_train, loan_test)
glimpse(loan_all)
summary(loan_all)
loan_all$CoapplicantIncome <- as.integer(loan_all$CoapplicantIncome)
loan_all$LoanAmount <- as.integer(loan_all$LoanAmount)
loan_all$Loan_Amount_Term <- as.integer(loan_all$Loan_Amount_Term)
loan_all$Credit_History <- as.character(loan_all$Credit_History)
# Check the outcome
glimpse(loan_all)
# Take care of missing data
summary(loan_all)
# Used these to check for missing values
# loan_train %>%
#    group_by(Loan_Status) %>%
#    count()
# sum(is.na(loan_all$ApplicantIncome))
# Making NA's Female.  There is already an imbalance in Male:Female ratio.  Adding more males may skew even further.  The ratio seems to be mostly unaffected with the addition of females
loan_all$Gender <- ifelse(is.na(loan_all$Gender),
'Female',
loan_all$Gender)
# Make NA's Yes.  Following the mode as an indicator here.
loan_all$Married <- ifelse(is.na(loan_all$Married),
'Yes',
loan_all$Married)
# Again using Mode
loan_all$Dependents <- ifelse(is.na(loan_all$Dependents),
'0',
loan_all$Dependents)
# Using Mode for Self_Employed
loan_all$Self_Employed <- ifelse(is.na(loan_all$Self_Employed),
'No',
loan_all$Self_Employed)
# Using the mean loan amount
loan_all$LoanAmount <- ifelse(is.na(loan_all$LoanAmount),
ave(loan_all$LoanAmount, FUN = function(x) mean(x, na.rm = TRUE)),
loan_all$LoanAmount)
# Using median term
loan_all$Loan_Amount_Term <- ifelse(is.na(loan_all$Loan_Amount_Term),
ave(loan_all$Loan_Amount_Term, FUN = function(x) median(x, na.rm = TRUE)),
loan_all$Loan_Amount_Term)
# I am making an assumption that if an applicant needs a Co-Signer then they have no credit history
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome > 0, 0,
loan_all$Credit_History)
loan_all$Credit_History <- ifelse(is.na(loan_all$Credit_History) & loan_all$CoapplicantIncome == 0, 1,
loan_all$Credit_History)
# Check the outcome
summary(loan_all)
sum(is.na(loan_all))
# Create the dummy variable for categorical data
loan_all$Gender <- factor(loan_all$Gender,
levels = c('Male', 'Female'),
labels = c(1, 2))
loan_all$Married <- factor(loan_all$Married,
levels = c('Yes', 'No'),
labels = c(1, 2))
loan_all$Dependents <- factor(loan_all$Dependents,
levels = c('0', '1', '2', '3+'),
labels = c(1, 2, 3, 4))
loan_all$Education <- factor(loan_all$Education,
levels = c('Graduate', 'Not Graduate'),
labels = c(1, 2))
loan_all$Self_Employed <- factor(loan_all$Self_Employed,
levels = c('Yes', 'No'),
labels = c(1, 2))
loan_all$Credit_History <- factor(loan_all$Credit_History,
levels = c('0', '1'),
labels = c(1, 2))
loan_all$Property_Area <- factor(loan_all$Property_Area,
levels = c('Rural', 'Urban', 'Semiurban),
labels = c(1, 2, 3))
loan_train <- loan_all %>%
filter(Loan_Status == 1 | Loan_Status == 2)
loan_test <- loan_all %>%
setdiff(loan_train) %>%
select(1:12)
View(loan_test)
View(loan_test)
summary(loan_all)
sum(is.na(loan_train))
sum(is.na(loan_test))
